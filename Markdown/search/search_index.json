{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenidos a mi coleccion Esta es una collecion privada que funciona como manual indice Guia de Markdown Guia de Mkdocs Comandos basicos con MkDocs mkdocs new [dir-name] - Crea un proyecto nuevo mkdocs serve - Ejecuta el modo de escucha \u00f3 'server'. mkdocs build - Crea nuestra documentaci\u00f3n en html mkdocs -h - Print help message and exit.","title":"Inicio"},{"location":"#bienvenidos-a-mi-coleccion","text":"Esta es una collecion privada que funciona como manual","title":"Bienvenidos a mi coleccion"},{"location":"#indice","text":"Guia de Markdown Guia de Mkdocs","title":"indice"},{"location":"#comandos-basicos-con-mkdocs","text":"mkdocs new [dir-name] - Crea un proyecto nuevo mkdocs serve - Ejecuta el modo de escucha \u00f3 'server'. mkdocs build - Crea nuestra documentaci\u00f3n en html mkdocs -h - Print help message and exit.","title":"Comandos basicos con MkDocs"},{"location":"MarkDown/guiaBasicaMarkDown/","text":"Header my title H1 my title H2 my title H3 my title H4 my title H5 my title H6 link text this is an italic text this is an strong text this is an ~~strikethrough~~ text fruits apple green apple red apple candy acid orange pear banana grape etc apple green apple red apple candy accid other pine banana grape etc google google this is a quote this is a second quote other end console.log('hello world'); const a= 'hello world'; console.log(a); const world = \"hello word\"; console.log(world); print('hello world') firstTitle secondTitle cod 1 col 2 col 1 1 col 2 col 1 1 col 2 col 1 [x] task 1 [ ] task 2 [ ] task 3 [x] task 4 Link to Header ver my-title-h2","title":"markdown comandos"},{"location":"MarkDown/guiaBasicaMarkDown/#header","text":"","title":"Header"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h1","text":"","title":"my title H1"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h2","text":"","title":"my title H2"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h3","text":"","title":"my title H3"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h4","text":"","title":"my title H4"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h5","text":"","title":"my title H5"},{"location":"MarkDown/guiaBasicaMarkDown/#my-title-h6","text":"link text this is an italic text this is an strong text this is an ~~strikethrough~~ text fruits apple green apple red apple candy acid orange pear banana grape etc apple green apple red apple candy accid other pine banana grape etc google google this is a quote this is a second quote other end console.log('hello world'); const a= 'hello world'; console.log(a); const world = \"hello word\"; console.log(world); print('hello world') firstTitle secondTitle cod 1 col 2 col 1 1 col 2 col 1 1 col 2 col 1 [x] task 1 [ ] task 2 [ ] task 3 [x] task 4 Link to Header ver my-title-h2","title":"my title H6"},{"location":"MarkDown/manualMkdocs/","text":"Lista de comandos para markDown mkdocs new nombre: siendo el \"nombre\" reemplazado por el nombre de nustro proyecto. Crea el archivo .yml: este contendra las variables de configuraci\u00f3n Crea una carpeta docs que contendra nuestros archivos de MarkDown Generar codigo html apartir de archivos .md (extension de markdown), nos situamos en consola junto al archivo .yml y ejecutamos: mkdocs build nos crea una carpeta \"site\" por defecto con el contenido en html para subir al repositorio mkdocs build --clean nos crea una carpeta limpiando la anterior, se ejecuta si ya teniamos una anteriormente Modo server: podremos visualizar cambios de nuestro contenido en vivo, para esto nos situamos en consola junto al archivo .yml, y ejecutamos: ```markdown y mkdocs mkdocs serve se genera un sitio web temporal y mkdocs quedara a la escucha, y cada vez que se modifiquen y guareden los cambios, la ventana del navegador se refrescara. Cerramos este modo con: ```bash ctrl + c Generar mas paginas con markdown: los nuevos archivos han de ser archivos de markdown, lo primero es definir estructura o organizacion de nuestros arhivos dentro de la carpeta \"docs\", ejemplo: mkdocs.yml docs/index.md docs/capitulos/capitulo1.md docs/capitulos/capitulo2.md docs/anexos/anexo1.md site/ estos archivos seconvertiran automaticamente, pero es necesario agregarlos a la barra de navegaci\u00f3n, para esto agregamos los archivos al archivo .yml, ejemplo: site_name: Mi proyecto nav: - Inicio: index.md - Cap\u00edtulo 1: capitulos/capitulo1.md - Cap\u00edtulo 2: capitulos/capitulo2.md - Acerca de: acerca.md - Resumen de opciones: opc/opciones.md Este codigo agregara un enlace para ser encontrado cuando generemos el codigo. site_name: Mi proyecto nav: - Inicio: index.md - Cap\u00edtulos: - Cap\u00edtulo 1: capitulos/capitulo1.md - Cap\u00edtulo 2: capitulos/capitulo2.md - Acerca de: acerca.md - Resumen de opciones: opc/opciones.md otro ejemplo, pero genera una opcion desplegable pagina principal: MkDocs buscara un archivo con el nombre \"index.md\" \u00f3 \"readme.md\", de estos dos tiene priorida el index Se puede escojer un tema: existen variedad de temas, el pordefecto es \"mkdocs\", pero se puede cambiar agregando theme en el .yml, y nos quedaria asi: site_name: Mi proyecto nav: - Inicio: index.md - Acerca de: acerca.md - Resumen de opciones: opciones.md theme: mkdocs aqui vemos el tema por defecto, pero mkdocs trae otro \"readthedocs\" podemos tambien cambiar el favicon, agregando una carpeta \"img\" junto al archivo .yml, y agregamos nuetsra imagen con el nombre \"favicon\" de extencion .ico mkdocs tiene una ayuda, ejecutando: mkdocs --help no muestra los comandos de mkdocs mkdocs build --help ayuda con un comando especifico, en este caso \"build\" Despliegue en Github: se pretende desplegar la documentaci\u00f3n con el serivicio de paginas de github, para ello se guardar\u00e1 el codigo en la rama master y con el comando: mkdocs gh-deploy este codigo copilar\u00e1 el proyecto y lo subira a la rama \"gh-pages\" y por defecto github esta rama la desplega, una vez hecho esto se pude ver el proyecto en el link: https://[nombre usuario].github.io/[nombre repositorio]/","title":"markdown Mkdocs"},{"location":"MarkDown/manualMkdocs/#lista-de-comandos-para-markdown","text":"mkdocs new nombre: siendo el \"nombre\" reemplazado por el nombre de nustro proyecto. Crea el archivo .yml: este contendra las variables de configuraci\u00f3n Crea una carpeta docs que contendra nuestros archivos de MarkDown Generar codigo html apartir de archivos .md (extension de markdown), nos situamos en consola junto al archivo .yml y ejecutamos: mkdocs build nos crea una carpeta \"site\" por defecto con el contenido en html para subir al repositorio mkdocs build --clean nos crea una carpeta limpiando la anterior, se ejecuta si ya teniamos una anteriormente Modo server: podremos visualizar cambios de nuestro contenido en vivo, para esto nos situamos en consola junto al archivo .yml, y ejecutamos: ```markdown y mkdocs mkdocs serve se genera un sitio web temporal y mkdocs quedara a la escucha, y cada vez que se modifiquen y guareden los cambios, la ventana del navegador se refrescara. Cerramos este modo con: ```bash ctrl + c Generar mas paginas con markdown: los nuevos archivos han de ser archivos de markdown, lo primero es definir estructura o organizacion de nuestros arhivos dentro de la carpeta \"docs\", ejemplo: mkdocs.yml docs/index.md docs/capitulos/capitulo1.md docs/capitulos/capitulo2.md docs/anexos/anexo1.md site/ estos archivos seconvertiran automaticamente, pero es necesario agregarlos a la barra de navegaci\u00f3n, para esto agregamos los archivos al archivo .yml, ejemplo: site_name: Mi proyecto nav: - Inicio: index.md - Cap\u00edtulo 1: capitulos/capitulo1.md - Cap\u00edtulo 2: capitulos/capitulo2.md - Acerca de: acerca.md - Resumen de opciones: opc/opciones.md Este codigo agregara un enlace para ser encontrado cuando generemos el codigo. site_name: Mi proyecto nav: - Inicio: index.md - Cap\u00edtulos: - Cap\u00edtulo 1: capitulos/capitulo1.md - Cap\u00edtulo 2: capitulos/capitulo2.md - Acerca de: acerca.md - Resumen de opciones: opc/opciones.md otro ejemplo, pero genera una opcion desplegable pagina principal: MkDocs buscara un archivo con el nombre \"index.md\" \u00f3 \"readme.md\", de estos dos tiene priorida el index Se puede escojer un tema: existen variedad de temas, el pordefecto es \"mkdocs\", pero se puede cambiar agregando theme en el .yml, y nos quedaria asi: site_name: Mi proyecto nav: - Inicio: index.md - Acerca de: acerca.md - Resumen de opciones: opciones.md theme: mkdocs aqui vemos el tema por defecto, pero mkdocs trae otro \"readthedocs\" podemos tambien cambiar el favicon, agregando una carpeta \"img\" junto al archivo .yml, y agregamos nuetsra imagen con el nombre \"favicon\" de extencion .ico mkdocs tiene una ayuda, ejecutando: mkdocs --help no muestra los comandos de mkdocs mkdocs build --help ayuda con un comando especifico, en este caso \"build\" Despliegue en Github: se pretende desplegar la documentaci\u00f3n con el serivicio de paginas de github, para ello se guardar\u00e1 el codigo en la rama master y con el comando: mkdocs gh-deploy este codigo copilar\u00e1 el proyecto y lo subira a la rama \"gh-pages\" y por defecto github esta rama la desplega, una vez hecho esto se pude ver el proyecto en el link: https://[nombre usuario].github.io/[nombre repositorio]/","title":"Lista de comandos para markDown"}]}